#
# Licensed to Metamarkets Group Inc. (Metamarkets) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. Metamarkets licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

#
# Extensions
#

# This is not the full list of Druid extensions, but common ones that people often use. You may need to change this list
# based on your particular setup.
druid.extensions.directory=/opt/druid/extensions
druid.extensions.loadList=["druid-kafka-indexing-service", "kafka-emitter", "druid-s3-extensions", "druid-histogram", "druid-datasketches", "druid-lookups-cached-global", "postgresql-metadata-storage", "druid-histogram", "druid-stats"]

# If you have a different version of Hadoop, place your Hadoop client jar files in your hadoop-dependencies directory
# and uncomment the line below to point to your directory.
druid.extensions.hadoopDependenciesDir=/opt/druid/hadoop-dependencies/

#
# Logging
#

# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid.startup.logging.logProperties=true

#
# Zookeeper
#
druid.zk.service.host=zookeeper
druid.zk.paths.base=/druid

#
# Metadata storage
#

druid.metadata.storage.type=postgresql
druid.metadata.storage.connector.connectURI=jdbc:postgresql://postgres/postgres
druid.metadata.storage.connector.user=postgres
druid.metadata.storage.connector.password=TCrGaanoC2s7gT


#
# Deep storage
#

# For S3:
druid.storage.type=s3
druid.storage.bucket=my-bucket
druid.storage.baseKey=druid/segments
druid.s3.accessKey=FQWJOPFQWNGFMLRIOUH7JDELAMARRE
druid.s3.secretKey=GuMftbvmiK/Ijcbsadowa/bqwoPPSsdmgqoasJDELAMARREKEY

druid.indexer.logs.type=s3
druid.indexer.logs.s3Bucket=my-bucket
druid.indexer.logs.s3Prefix=druid/indexing-logs

#
# Indexing service logs
#



#
# Service discovery
#

druid.selectors.indexing.serviceName=druid/overlord
druid.selectors.coordinator.serviceName=druid/coordinator

#
# Monitoring
#

#druid.monitoring.monitors=["com.metamx.metrics.JvmMonitor", "io.druid.client.cache.CacheMonitor", "io.druid.server.metrics.QueryCountStatsMonitor", "io.druid.server.metrics.HistoricalMetricsMonitor"]

druid.monitoring.monitors=["com.metamx.metrics.JvmMonitor"]
druid.emitter=kafka

druid.emitter.kafka.bootstrap.servers=kafka:9092
druid.emitter.kafka.metric.topic=druid-metric
druid.emitter.kafka.alert.topic=druid-alert
druid.emitter.kafka.producer.config={"max.block.ms":10000}

# druid.emitter=logging
# druid.emitter.logging.logLevel=info
