version: "3"
services:

  interlock:
    image:  gcr.io/npav-172917/interlock:latest
    #image: ehazlett/interlock:1.4.1
    command: -D run  -c /etc/interlock/config.toml
    tty: true
    ports:
        - 8080
    environment:
        INTERLOCK_CONFIG: |
            ListenAddr = ":8080"
            #PollInterval = "5s"
            DockerURL = "unix:///var/run/docker.sock"
            #DockerURL = "tcp://debian-leader.c.npav-172917.internal:2376"
            #TLSCACert = "/etc/docker/ssl/docker-ca.pem"
            #TLSCert = "/etc/docker/ssl/docker-cert.pem"
            #TLSKey = "/etc/docker/ssl/docker-key.pem"
            [[Extensions]]
            Name = "nginx"
            ConfigPath = "/etc/nginx/nginx.conf"
            PidPath = "/var/run/nginx.pid"
            TemplatePath = ""
            MaxConn = 1024
            Port = 80
    volumes:
        - /etc/docker:/etc/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock

    deploy:
        mode: global

  nginx:
    image: nginx:latest
    entrypoint: nginx
    command: -g "daemon off;" -c /etc/nginx/nginx.conf
    ports:
        - 80:80
    labels:
        - "interlock.ext.name=nginx"
    deploy:
      placement:
        constraints:
          - node.role == manager

  postgres:
    image: postgres:9.2
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=TCrGaanoC2s7gT

  zookeeper:
    container_name: zookeeper
    image: znly/zookeeper:3.4.8
    environment:
      - ZOO_ID=1
      - ZOO_SERVERS=zookeeper

## Druid nodes
  overlord:
    image: gcr.io/npav-172917/druid:0.10.1
    hostname: overlord
    labels:
        - "interlock.hostname=${DEPLOYMENT_NAME}.druid"
        - "interlock.domain=${DOMAIN_NAME}"
        - "interlock.port=8090"
        - "interlock.network=druid_default"
        - "interlock.context_root="
        - "interlock.context_root_rewrite=false"
    environment:
      - DRUID_XMX=1g
      - DRUID_XMS=1g
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - 8090:8090
    command:
      - overlord

  coordinator:
    image: gcr.io/npav-172917/druid:0.10.1
    hostname: coordinator
    labels:
        - "interlock.hostname=${DEPLOYMENT_NAME}.coordinator"
        - "interlock.domain=${DOMAIN_NAME}"
        - "interlock.port=8081"
        - "interlock.network=druid_default"
    environment:
      - DRUID_XMX=1g
      - DRUID_XMS=1g
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
    ports:
      - 8081:8081
    command:
      - coordinator
    deploy:
      placement:
        constraints:
          - node.role == manager

  middlemanager:
    image: gcr.io/npav-172917/druid:0.10.1
    environment:
      - DRUID_XMX=1g
      - DRUID_XMS=1g
      - DRUID_MAXNEWSIZE=250m
      - DRUID_NEWSIZE=250m
    command:
      - middleManager
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT}-3

  historical:
    image: gcr.io/npav-172917/druid:0.10.1
    environment:
      - DRUID_XMX=3g
      - DRUID_XMS=1g
      - DRUID_MAXNEWSIZE=700m
      - DRUID_NEWSIZE=500m
      - DRUID_MAX_DIRECTMEM_SIZE=1500m
    command:
      - historical
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT}-2

  broker:
    image: gcr.io/npav-172917/druid:0.10.1
    labels:
        - "interlock.hostname=${DEPLOYMENT_NAME}.broker"
        - "interlock.domain=${DOMAIN_NAME}"
        - "interlock.port=8082"
        - "interlock.network=druid_default"
    environment:
      - DRUID_XMX=4g
      - DRUID_XMS=1500m
      - DRUID_MAXNEWSIZE=1g
      - DRUID_NEWSIZE=500m
      - DRUID_MAX_DIRECTMEM_SIZE=1500m
    ports:
        - 8082:8082
    command:
      - broker
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT}-1

  metabase:
    image: metabase/metabase-head:latest
    #image: metabase/metabase:v0.25.1
    hostname: metabase
    ports:
      - 3000:3000
    deploy:
      placement:
        constraints:
          - node.role == manager
    labels:
        - "interlock.hostname=${DEPLOYMENT_NAME}.metabase"
        - "interlock.domain=${DOMAIN_NAME}"
        - "interlock.port=3000"
        - "interlock.network=druid_default"

  # tranquility:
  #   image: gofly/tranquility:0.8.2
  #   hostname: tranquility
  #   labels:
  #       - "interlock.hostname=${DEPLOYMENT_NAME}.tranquility"
  #       - "interlock.domain=${DOMAIN_NAME}"
  #       - "interlock.port=8200"
  #       - "interlock.network=druid_default"
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager
  #   volumes:
  #       - /etc/localtime:/etc/localtime
  #       - $PWD/tranquility-conf:/srv/tranquility/conf
  #   ports:
  #       - 8200:8200

  # superset:
  #   hostname: superset
  #   #image: amancevice/superset:0.18.5
  #   image: amancevice/superset:latest
  #   ports:
  #     - 8088
  #   volumes:
  #     - $PWD/superset-conf:/etc/superset
  #   labels:
  #       - "interlock.hostname=${DEPLOYMENT_NAME}.superset"
  #       - "interlock.domain=${DOMAIN_NAME}"
  #       - "interlock.port=8088"
  #       - "interlock.network=druid_default"

  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager

## S3 on-prem support:

  pithos:
    image: gcr.io/npav-172917/pithos:latest
    hostname: pithos
    ports:
      - "8080:8080"
    depends_on:
      - cassandra

    volumes:
      - /var/lib/data/pithos:/pithos/data

  cassandra-1:
    image: cassandra:2.1
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT_NAME}-1
    environment:
      CASSANDRA_SEEDS: cassandra-1
      CASSANDRA_BROADCAST_ADDRESS: cassandra-1
    volumes:
      - /var/lib/data/cassandra:/var/lib/cassandra/

  cassandra-2:
    image: cassandra:2.1
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT_NAME}-2
    environment:
      CASSANDRA_SEEDS: cassandra-1
      CASSANDRA_BROADCAST_ADDRESS: cassandra-2
    volumes:
      - /var/lib/data/cassandra:/var/lib/cassandra/

  cassandra-3:
    image: cassandra:2.1
    deploy:
      placement:
        constraints:
          - node.labels == ${DEPLOYMENT_NAME}-3
    environment:
      CASSANDRA_SEEDS: cassandra-1
      CASSANDRA_BROADCAST_ADDRESS: cassandra-3
    volumes:
      - /var/lib/data/cassandra:/var/lib/cassandra/
